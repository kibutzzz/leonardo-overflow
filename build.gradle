

def teamPropsFile(propsFile) {
	def teamPropsDir = file('team-props')
	return new File(teamPropsDir, propsFile)
}

plugins {
	id 'org.springframework.boot' version '2.2.2.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'jacoco'
	id 'checkstyle'
	id 'pmd'
}

ext.projectPackage = "${project.group}.${project.name.replace('-', '')}"
apply from: teamPropsFile('code-quality.gradle')


group = 'br.com.kibutzzz'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext {
	mapstructVersion = '1.3.1.Final'
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	compile "org.mapstruct:mapstruct:${mapstructVersion}"
	compile 'org.projectlombok:lombok'
	compile 'io.jsonwebtoken:jjwt:0.9.1'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.2.3'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testImplementation('org.springframework.security:spring-security-test')
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}


test {
	useJUnitPlatform {
		includeEngines 'junit-jupiter'
	}
}


